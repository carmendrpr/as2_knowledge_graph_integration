-- run_test.py: invoking following command in '/home/carmendrpr/ros2_ws/src/as2_knowledge_graph_integration':
 - /opt/ros/humble/bin/ament_flake8 --xunit-file /home/carmendrpr/ros2_ws/src/as2_knowledge_graph_integration/build/test_results/as2_knowledge_graph_integration/flake8.xunit.xml

import as2_knowledge_graph_integration.utils as utils
^
from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph
^
from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph
^
        if self.query_node_name(source_node_class) is None or self.query_node_name(target_node_class) is None:
                                                                                                   ^
import as2_knowledge_graph_integration.utils as utils
^
from as2_knowledge_graph_msgs.srv import CreateEdge
^
import as2_knowledge_graph_integration.parameters as parameters
^
                edge_class='located', source_node=source_node.node_name, target_node=target_node.node_name)
                                                                                                   ^
                edge_class=' seeing', source_node=source_node.node_name, target_node=target_node.node_name)
                                                                                                   ^
    geozone_edge = CreateEdge.Request()
    ^
    pose_prop = utils.look_for_property(source_node.properties, 'Position')
    ^
from geometry_msgs.msg import PoseStamped
^
from as2_msgs.msg import PlatformInfo
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            PoseStamped, 'self_localization/pose', self.read_pose_callback, qos_profile_sensor_data)
                                                                                                   ^
            BatteryState, 'sensor_measurements/battery', self.read_baterry_state_callback, qos_profile_sensor_data)
                                                                                                   ^
        """Call for status info"""
^
        """Call for battery state info"""
^
            edge_class='high', source_node=self.dron_node.node_name, target_node=req.node.node_name)
                                                                                                   ^
        """Call for the pose info topic"""
^
            'Dron', self.get_namespace(), utils_for_drones.pos_prop_from_pose(msg.pose), priority=1)
                                                                                                   ^
        """Requests"""
^
        """Requests"""
^
import as2_knowledge_graph_integration.parameters as parameters
^
from as2_msgs.msg import PlatformInfo
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            BatteryState, 'sensor_measurements/battery', self.subscribe_baterry, qos_profile_sensor_data)
                                                                                                   ^
        self.request = {'dron': CreateNode.Request(), 'pose': CreateNode.Request(), 'battery': CreateNode.Request(), 'status': CreateNode.Request(
                                                                                                   ^
        ), 'geozone': CreateNode.Request(), 'home': CreateNode.Request(), 'person': CreateNode.Request(), 'status_rm': CreateNode.Request()}
                                                                                                   ^
        ), 'person_edge_rm': CreateEdge.Request(), 'home_edge': CreateEdge.Request(), 'home_edge_rm': CreateEdge.Request(), 'status_edge': CreateEdge.Request(), 'battery_edge': CreateEdge.Request()}
                                                                                                   ^
            'Dron', self.get_namespace(), utils_for_drones.pos_prop_from_pose(msg.pose), priority=1)
                                                                                                   ^
        """
        Request for the static nodes
        """
^
        """
        Request for the static nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the edges
        """
^

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_graph.py:2:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.utils' should be before 'import rclpy'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_graph.py:4:1: I101 Imported names are in the wrong order. Should be ReadEdgeGraph, ReadGraph

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_graph.py:4:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph' should be before 'from rclpy.node import Node'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_graph.py:51:100: E501 line too long (110 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:2:1: I201 Missing newline between import groups. 'import as2_knowledge_graph_integration.utils' is identified as Third Party and 'import math' is identified as Stdlib.

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:4:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateEdge' should be before 'from knowledge_graph_msgs.msg import Node, Property'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:5:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'from as2_knowledge_graph_msgs.srv import CreateEdge'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:105:100: E501 line too long (107 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:107:100: E501 line too long (107 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:133:5: F841 local variable 'geozone_edge' is assigned to but never used

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py:134:5: F841 local variable 'pose_prop' is assigned to but never used

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:34:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import PoseStamped' should be before 'import parameters'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:36:1: I100 Import statements are in the wrong order. 'from as2_msgs.msg import PlatformInfo' should be before 'from sensor_msgs.msg import BatteryState'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:37:1: I101 Imported names are in the wrong order. Should be CreateEdge, CreateNode

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:37:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge' should be before 'from as2_msgs.msg import PlatformInfo'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:40:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:54:100: E501 line too long (100 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:56:100: E501 line too long (115 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:105:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:122:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:133:100: E501 line too long (100 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:156:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:160:100: E501 line too long (100 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:190:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py:190:1: D401 First line should be in imperative mood

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:33:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'import as2_knowledge_graph_integration.utils_for_drones'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:36:1: I100 Import statements are in the wrong order. 'from as2_msgs.msg import PlatformInfo' should be before 'from sensor_msgs.msg import BatteryState'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:37:1: I101 Imported names are in the wrong order. Should be CreateEdge, CreateNode

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:37:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge' should be before 'from as2_msgs.msg import PlatformInfo'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:40:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:56:100: E501 line too long (105 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:81:100: E501 line too long (146 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:82:100: E501 line too long (140 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:87:100: E501 line too long (198 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:93:100: E501 line too long (100 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:112:1: D200 One-line docstring should fit on one line with quotes

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:112:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D200 One-line docstring should fit on one line with quotes

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D202 No blank lines allowed after function docstring

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D200 One-line docstring should fit on one line with quotes

        """
        Request for the edges
        """
^
        """
        Request for the edges
        """
^
            self.drone_baterry.properties[1].value.float_value, self.drone_node.node_name, self.drone_baterry.node_name)
                                                                                                   ^
        self.request_edge['home_edge'].edge, self.request_edge['home_edge_rm'].edge = utils_for_drones.home_edge_req(
                                                                                                   ^
        if utils_for_drones.person_edge_req(self.drone_node, parameters.node_person, self.drone_node.node_name) is not None:
                                                                                                   ^
            self.request_edge['person_edge'].edge, self.request_edge['person_edge_rm'].edge = utils_for_drones.person_edge_req(
                                                                                                   ^
        #   parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class))
                                                                                                   ^
        #         if utils_for_drones.person_edge_saw_req(self.drone_node, parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class) is not None:
                                                                                                   ^
        #             self.request_edge['person_edge'].edge, self.request_edge['person_edge_rm'].edge = utils_for_drones.person_edge_saw_req(
                                                                                                   ^
        #                 self.drone_node, parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class)
                                                                                                   ^
import math
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
import as2_knowledge_graph_integration.parameters as parameters
^
import as2_knowledge_graph_integration.parameters as parameters
^
from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph
^
from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            self.get_logger().info('service read_edge_source_target_graph is not available, waiting again...')
                                                                                                   ^
        """Main callback"""
^
        """Main callback"""
^
                            edge_class='near', source_node=node.node_name, target_node=aux_node.node_name)
                                                                                                   ^
                        req_exist_edge.edge_class = "near"
                                                    ^
                                self.future_resp_create_edge = self.cli_create_edge_near.call_async(
                                                                                                   ^
                print("Succssefully create the edge")
                      ^
import as2_knowledge_graph_integration.utils as utils
^
from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph
^
from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph
^
        if self.query_node_name(source_node_class) is None or self.query_node_name(target_node_class) is None:
                                                                                                   ^
import as2_knowledge_graph_integration.utils as utils
^
from as2_knowledge_graph_msgs.srv import CreateEdge
^
import as2_knowledge_graph_integration.parameters as parameters
^
                edge_class='located', source_node=source_node.node_name, target_node=target_node.node_name)
                                                                                                   ^
                edge_class=' seeing', source_node=source_node.node_name, target_node=target_node.node_name)
                                                                                                   ^
    geozone_edge = CreateEdge.Request()
    ^
    pose_prop = utils.look_for_property(source_node.properties, 'Position')
    ^
from geometry_msgs.msg import PoseStamped
^
from as2_msgs.msg import PlatformInfo
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            PoseStamped, 'self_localization/pose', self.read_pose_callback, qos_profile_sensor_data)
                                                                                                   ^
            BatteryState, 'sensor_measurements/battery', self.read_baterry_state_callback, qos_profile_sensor_data)
                                                                                                   ^
        """Call for status info"""
^
        """Call for battery state info"""
^
            edge_class='high', source_node=self.dron_node.node_name, target_node=req.node.node_name)
                                                                                                   ^
./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D202 No blank lines allowed after function docstring

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:164:100: E501 line too long (120 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:165:100: E501 line too long (117 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:168:100: E501 line too long (124 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:170:100: E501 line too long (127 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:180:100: E501 line too long (139 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:184:100: E501 line too long (214 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:185:100: E501 line too long (141 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py:186:100: E501 line too long (169 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:29:1: F401 'math' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:30:1: F401 'knowledge_graph_msgs.msg.Content' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:30:1: I101 Imported names are in the wrong order. Should be Content, Edge, Node, Property

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:30:1: I201 Missing newline between import groups. 'from knowledge_graph_msgs.msg import Node, Edge, Content, Property' is identified as Third Party and 'import math' is identified as Stdlib.

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:31:1: F401 'as2_knowledge_graph_integration.parameters' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py:31:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'from knowledge_graph_msgs.msg import Node, Edge, Content, Property'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:33:1: I101 Imported names are in the wrong order. Should be CreateEdge, ReadEdgeGraph, ReadGraph

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:33:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph' should be before 'from rclpy.node import Node'

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:34:1: F401 'rclpy.qos.qos_profile_sensor_data' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:34:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:59:100: E501 line too long (110 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:71:1: D400 First line should end with a period

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:71:1: D401 First line should be in imperative mood; try rephrasing

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:96:100: E501 line too long (106 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:97:53: Q000 Double quotes found but single quotes preferred

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:100:100: E501 line too long (100 > 99 characters)

./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py:112:23: Q000 Double quotes found but single quotes preferred

./as2_knowledge_graph_integration/read_graph.py:2:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.utils' should be before 'import rclpy'

./as2_knowledge_graph_integration/read_graph.py:4:1: I101 Imported names are in the wrong order. Should be ReadEdgeGraph, ReadGraph

./as2_knowledge_graph_integration/read_graph.py:4:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import ReadGraph, ReadEdgeGraph' should be before 'from rclpy.node import Node'

./as2_knowledge_graph_integration/read_graph.py:51:100: E501 line too long (110 > 99 characters)

./as2_knowledge_graph_integration/utils_for_drones.py:2:1: I201 Missing newline between import groups. 'import as2_knowledge_graph_integration.utils' is identified as Third Party and 'import math' is identified as Stdlib.

./as2_knowledge_graph_integration/utils_for_drones.py:4:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateEdge' should be before 'from knowledge_graph_msgs.msg import Node, Property'

./as2_knowledge_graph_integration/utils_for_drones.py:5:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'from as2_knowledge_graph_msgs.srv import CreateEdge'

./as2_knowledge_graph_integration/utils_for_drones.py:105:100: E501 line too long (107 > 99 characters)

./as2_knowledge_graph_integration/utils_for_drones.py:107:100: E501 line too long (107 > 99 characters)

./as2_knowledge_graph_integration/utils_for_drones.py:133:5: F841 local variable 'geozone_edge' is assigned to but never used

./as2_knowledge_graph_integration/utils_for_drones.py:134:5: F841 local variable 'pose_prop' is assigned to but never used

./as2_knowledge_graph_integration/insert_knowledge.py:34:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import PoseStamped' should be before 'import parameters'

./as2_knowledge_graph_integration/insert_knowledge.py:36:1: I100 Import statements are in the wrong order. 'from as2_msgs.msg import PlatformInfo' should be before 'from sensor_msgs.msg import BatteryState'

./as2_knowledge_graph_integration/insert_knowledge.py:37:1: I101 Imported names are in the wrong order. Should be CreateEdge, CreateNode

./as2_knowledge_graph_integration/insert_knowledge.py:37:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge' should be before 'from as2_msgs.msg import PlatformInfo'

./as2_knowledge_graph_integration/insert_knowledge.py:40:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./as2_knowledge_graph_integration/insert_knowledge.py:54:100: E501 line too long (100 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledge.py:56:100: E501 line too long (115 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledge.py:105:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledge.py:122:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledge.py:133:100: E501 line too long (100 > 99 characters)

        """Call for the pose info topic"""
^
            'Dron', self.get_namespace(), utils_for_drones.pos_prop_from_pose(msg.pose), priority=1)
                                                                                                   ^
        """Requests"""
^
        """Requests"""
^
import as2_knowledge_graph_integration.parameters as parameters
^
from as2_msgs.msg import PlatformInfo
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            BatteryState, 'sensor_measurements/battery', self.subscribe_baterry, qos_profile_sensor_data)
                                                                                                   ^
        self.request = {'dron': CreateNode.Request(), 'pose': CreateNode.Request(), 'battery': CreateNode.Request(), 'status': CreateNode.Request(
                                                                                                   ^
        ), 'geozone': CreateNode.Request(), 'home': CreateNode.Request(), 'person': CreateNode.Request(), 'status_rm': CreateNode.Request()}
                                                                                                   ^
        ), 'person_edge_rm': CreateEdge.Request(), 'home_edge': CreateEdge.Request(), 'home_edge_rm': CreateEdge.Request(), 'status_edge': CreateEdge.Request(), 'battery_edge': CreateEdge.Request()}
                                                                                                   ^
            'Dron', self.get_namespace(), utils_for_drones.pos_prop_from_pose(msg.pose), priority=1)
                                                                                                   ^
        """
        Request for the static nodes
        """
^
        """
        Request for the static nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the nodes
        """
^
        """
        Request for the edges
        """
^
        """
        Request for the edges
        """
^
        """
        Request for the edges
        """
^
            self.drone_baterry.properties[1].value.float_value, self.drone_node.node_name, self.drone_baterry.node_name)
                                                                                                   ^
        self.request_edge['home_edge'].edge, self.request_edge['home_edge_rm'].edge = utils_for_drones.home_edge_req(
                                                                                                   ^
        if utils_for_drones.person_edge_req(self.drone_node, parameters.node_person, self.drone_node.node_name) is not None:
                                                                                                   ^
            self.request_edge['person_edge'].edge, self.request_edge['person_edge_rm'].edge = utils_for_drones.person_edge_req(
                                                                                                   ^
        #   parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class))
                                                                                                   ^
        #         if utils_for_drones.person_edge_saw_req(self.drone_node, parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class) is not None:
                                                                                                   ^
        #             self.request_edge['person_edge'].edge, self.request_edge['person_edge_rm'].edge = utils_for_drones.person_edge_saw_req(
                                                                                                   ^
        #                 self.drone_node, parameters.node_person, self.request_edge['person_edge'].edge.edge_class, self.request_edge['person_edge_rm'].edge.edge_class)
                                                                                                   ^
import math
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
from knowledge_graph_msgs.msg import Node, Edge, Content, Property
^
import as2_knowledge_graph_integration.parameters as parameters
^
import as2_knowledge_graph_integration.parameters as parameters
^
from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph
^
from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
from rclpy.qos import qos_profile_sensor_data, qos_profile_system_default
^
            self.get_logger().info('service read_edge_source_target_graph is not available, waiting again...')
                                                                                                   ^
        """Main callback"""
^
        """Main callback"""
^
                            edge_class='near', source_node=node.node_name, target_node=aux_node.node_name)
                                                                                                   ^
                        req_exist_edge.edge_class = "near"
                                                    ^
                                self.future_resp_create_edge = self.cli_create_edge_near.call_async(
                                                                                                   ^
                print("Succssefully create the edge")
                      ^
6     D200 One-line docstring should fit on one line with quotes
4     D202 No blank lines allowed after function docstring
16    D400 First line should end with a period
4     D401 First line should be in imperative mood
46    E501 line too long (100 > 99 characters)
14    F401 'rclpy.qos.qos_profile_system_default' imported but unused
4     F841 local variable 'geozone_edge' is assigned to but never used
24    I100 Import statements are in the wrong order. 'from geometry_msgs.msg import PoseStamped' should be before 'import parameters'
10    I101 Imported names are in the wrong order. Should be CreateEdge, CreateNode
4     I201 Missing newline between import groups. 'from knowledge_graph_msgs.msg import Node, Edge, Content, Property' is identified as Third Party and 'import math' is identified as Stdlib.
4     Q000 Double quotes found but single quotes preferred
./as2_knowledge_graph_integration/insert_knowledge.py:156:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledge.py:160:100: E501 line too long (100 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledge.py:190:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledge.py:190:1: D401 First line should be in imperative mood

./as2_knowledge_graph_integration/insert_knowledgeV2.py:33:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'import as2_knowledge_graph_integration.utils_for_drones'

./as2_knowledge_graph_integration/insert_knowledgeV2.py:36:1: I100 Import statements are in the wrong order. 'from as2_msgs.msg import PlatformInfo' should be before 'from sensor_msgs.msg import BatteryState'

./as2_knowledge_graph_integration/insert_knowledgeV2.py:37:1: I101 Imported names are in the wrong order. Should be CreateEdge, CreateNode

./as2_knowledge_graph_integration/insert_knowledgeV2.py:37:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import CreateNode, CreateEdge' should be before 'from as2_msgs.msg import PlatformInfo'

./as2_knowledge_graph_integration/insert_knowledgeV2.py:40:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./as2_knowledge_graph_integration/insert_knowledgeV2.py:56:100: E501 line too long (105 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:81:100: E501 line too long (146 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:82:100: E501 line too long (140 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:87:100: E501 line too long (198 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:93:100: E501 line too long (100 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:112:1: D200 One-line docstring should fit on one line with quotes

./as2_knowledge_graph_integration/insert_knowledgeV2.py:112:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D200 One-line docstring should fit on one line with quotes

./as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D202 No blank lines allowed after function docstring

./as2_knowledge_graph_integration/insert_knowledgeV2.py:133:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D200 One-line docstring should fit on one line with quotes

./as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D202 No blank lines allowed after function docstring

./as2_knowledge_graph_integration/insert_knowledgeV2.py:159:1: D400 First line should end with a period

./as2_knowledge_graph_integration/insert_knowledgeV2.py:164:100: E501 line too long (120 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:165:100: E501 line too long (117 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:168:100: E501 line too long (124 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:170:100: E501 line too long (127 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:180:100: E501 line too long (139 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:184:100: E501 line too long (214 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:185:100: E501 line too long (141 > 99 characters)

./as2_knowledge_graph_integration/insert_knowledgeV2.py:186:100: E501 line too long (169 > 99 characters)

./as2_knowledge_graph_integration/utils.py:29:1: F401 'math' imported but unused

./as2_knowledge_graph_integration/utils.py:30:1: F401 'knowledge_graph_msgs.msg.Content' imported but unused

./as2_knowledge_graph_integration/utils.py:30:1: I101 Imported names are in the wrong order. Should be Content, Edge, Node, Property

./as2_knowledge_graph_integration/utils.py:30:1: I201 Missing newline between import groups. 'from knowledge_graph_msgs.msg import Node, Edge, Content, Property' is identified as Third Party and 'import math' is identified as Stdlib.

./as2_knowledge_graph_integration/utils.py:31:1: F401 'as2_knowledge_graph_integration.parameters' imported but unused

./as2_knowledge_graph_integration/utils.py:31:1: I100 Import statements are in the wrong order. 'import as2_knowledge_graph_integration.parameters' should be before 'from knowledge_graph_msgs.msg import Node, Edge, Content, Property'

./as2_knowledge_graph_integration/read_knowledge.py:33:1: I101 Imported names are in the wrong order. Should be CreateEdge, ReadEdgeGraph, ReadGraph

./as2_knowledge_graph_integration/read_knowledge.py:33:1: I100 Import statements are in the wrong order. 'from as2_knowledge_graph_msgs.srv import ReadGraph, CreateEdge, ReadEdgeGraph' should be before 'from rclpy.node import Node'

./as2_knowledge_graph_integration/read_knowledge.py:34:1: F401 'rclpy.qos.qos_profile_sensor_data' imported but unused

./as2_knowledge_graph_integration/read_knowledge.py:34:1: F401 'rclpy.qos.qos_profile_system_default' imported but unused

./as2_knowledge_graph_integration/read_knowledge.py:59:100: E501 line too long (110 > 99 characters)

./as2_knowledge_graph_integration/read_knowledge.py:71:1: D400 First line should end with a period

./as2_knowledge_graph_integration/read_knowledge.py:71:1: D401 First line should be in imperative mood; try rephrasing

./as2_knowledge_graph_integration/read_knowledge.py:96:100: E501 line too long (106 > 99 characters)

./as2_knowledge_graph_integration/read_knowledge.py:97:53: Q000 Double quotes found but single quotes preferred

./as2_knowledge_graph_integration/read_knowledge.py:100:100: E501 line too long (100 > 99 characters)

./as2_knowledge_graph_integration/read_knowledge.py:112:23: Q000 Double quotes found but single quotes preferred


17 files checked
136 errors

'D'-type errors: 30
'E'-type errors: 46
'F'-type errors: 18
'I'-type errors: 38
'Q'-type errors: 4

Checked files:

* ./build/ament_cmake_python/as2_knowledge_graph_integration/setup.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_graph.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils_for_drones.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledge.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/insert_knowledgeV2.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/utils.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/parameters.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/read_knowledge.py
* ./build/ament_cmake_python/as2_knowledge_graph_integration/as2_knowledge_graph_integration/__init__.py
* ./as2_knowledge_graph_integration/read_graph.py
* ./as2_knowledge_graph_integration/utils_for_drones.py
* ./as2_knowledge_graph_integration/insert_knowledge.py
* ./as2_knowledge_graph_integration/insert_knowledgeV2.py
* ./as2_knowledge_graph_integration/utils.py
* ./as2_knowledge_graph_integration/parameters.py
* ./as2_knowledge_graph_integration/read_knowledge.py
* ./as2_knowledge_graph_integration/__init__.py


-- run_test.py: return code 1
-- run_test.py: verify result file '/home/carmendrpr/ros2_ws/src/as2_knowledge_graph_integration/build/test_results/as2_knowledge_graph_integration/flake8.xunit.xml'
